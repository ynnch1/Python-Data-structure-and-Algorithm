class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

# create linked list class which contain its behavior such push, append, pirnt out the linked list data
class LinkedList:
    def __init__(self):
        self.head = None
#make the new node as the head
    def push(self, new_data):
        new_node = Node(new_data)
        new_node.next = self.head
        self.head = new_node
    def insertAfter(self, prev_node, new_data):
        if prev_node is None:
            print('The given previous node must be in linked list')
            return
        new_node = Node(new_data)
        new_node.next = prev_node.next
        prev_node.next = new_node
#
    def append(self, new_data):
        new_node = Node(new_data)
        if self.head is None:
            self.head = new_node 
            return

            last = self.head
            while(last, next):
                last = last.next
            last.next = mew_mode
#print
    def printList(self):
        temp = self.head
        while(temp):
            print(temp.data, end=" ")
            temp = temp.next
#code execution
if __name__ == '__main__':
    llist1 = LinkedList()
    llist2 = LinkedList()


    # 1
    print("1. create new linked list")
    # your code here and bellow
    llist1.append(5)
    llist1.push(4)
    llist1.push(8)
    llist1.push(9)

    llist1.printList() # print out the #1 expect output
    
    # 2
    print("\n2. insert node to the existing linked list")
    # your code here and bellow
    llist2.append(5)
    llist2.push(4)
    llist2.push(8)
    llist2.push(9)
    llist2.insertAfter(llist2.head.next, 7)
    llist2.push(8)
    llist2.insertAfter(llist2.head.next, 10)




    llist2.printList() # print out the #2 expect output